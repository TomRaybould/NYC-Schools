[versions]
gradle = "8.8.2"
kotlin = "2.1.10"
appcompat = "1.7.0"
appcompatactivity = "1.10.0"
constraintlayout = "2.2.0"
recyclerview = "1.4.0"
coreKtx = "1.15.0"
lifecycleViewModel = "2.8.7"
composeRuntimeLivedata = "1.7.7"
junit = "4.13.2"
testRunner = "1.6.2"
espressoCore = "3.6.1"
dagger = "2.22"
rxJava = "2.2.10"
rxAndroid = "2.0.2"
okhttp = "4.9.0"
glide = "4.9.0"
composeBom = "2025.01.01"
material3 = "1.3.1" # Update to the appropriate version
material = "1.7.7" # Update to the appropriate version
foundation = "1.7.7" # Update to the appropriate version
ui = "1.7.7" # Update to the appropriate version
uiToolingPreview = "1.7.7" # Update to the appropriate version
uiTooling = "1.7.7" # Update to the appropriate version
uiTestJUnit4 = "1.7.7" # Update to the appropriate version
uiTestManifest = "1.7.7" # Update to the appropriate version
kotlinStdlib = "1.5.21"
mockk = "1.13.2"
androidx-core-testing = "2.1.0"

[libraries]
androidxAppCompat = { module = "androidx.appcompat:appcompat", version.ref = "appcompat" }
androidxAppCompatActivityCompose = { module = "androidx.activity:activity-compose", version.ref = "appcompatactivity" }
androidxConstraintLayout = { module = "androidx.constraintlayout:constraintlayout", version.ref = "constraintlayout" }
androidxRecyclerView = { module = "androidx.recyclerview:recyclerview", version.ref = "recyclerview" }
androidxCoreKtx = { module = "androidx.core:core-ktx", version.ref = "coreKtx" }
androidxLifecycleViewModel = { module = "androidx.lifecycle:lifecycle-viewmodel", version.ref = "lifecycleViewModel" }
androidxComposeRuntimeLivedata = { module = "androidx.compose.runtime:runtime-livedata", version.ref = "composeRuntimeLivedata" }
gradle = { module = "com.android.tools.build:gradle", version.ref = "gradle" }
junit = { module = "junit:junit", version.ref = "junit" }
androidxTestRunner = { module = "androidx.test:runner", version.ref = "testRunner" }
espressoCore = { module = "androidx.test.espresso:espresso-core", version.ref = "espressoCore" }
composeBom = { group = "androidx.compose", name = "compose-bom", version.ref = "composeBom" }
material3 = { group = "androidx.compose.material3", name = "material3", version.ref = "material3" }
material = { group = "androidx.compose.material", name = "material", version.ref = "material" }
foundation = { group = "androidx.compose.foundation", name = "foundation", version.ref = "foundation" }
ui = { group = "androidx.compose.ui", name = "ui", version.ref = "ui" }
uiToolingPreview = { group = "androidx.compose.ui", name = "ui-tooling-preview", version.ref = "uiToolingPreview" }
uiTooling = { group = "androidx.compose.ui", name = "ui-tooling", version.ref = "uiTooling" }
uiTestJUnit4 = { group = "androidx.compose.ui", name = "ui-test-junit4", version.ref = "uiTestJUnit4" }
uiTestManifest = { group = "androidx.compose.ui", name = "ui-test-manifest", version.ref = "uiTestManifest" }


# Dagger Dependencies
dagger = { module = "com.google.dagger:dagger", version.ref = "dagger" }
daggerAndroidSupport = { module = "com.google.dagger:dagger-android-support", version.ref = "dagger" }
daggerCompiler = { module = "com.google.dagger:dagger-compiler", version.ref = "dagger" }
daggerAndroidProcessor = { module = "com.google.dagger:dagger-android-processor", version.ref = "dagger" }

# RxJava Dependencies
rxJava = { module = "io.reactivex.rxjava2:rxjava", version.ref = "rxJava" }
rxAndroid = { module = "io.reactivex.rxjava2:rxandroid", version.ref = "rxAndroid" }

# Networking
okhttp = { module = "com.squareup.okhttp3:okhttp", version.ref = "okhttp" }

# Image Loading
glide = { module = "com.github.bumptech.glide:glide", version.ref = "glide" }

# Kotlin Standard Library
kotlinStdlib = { module = "org.jetbrains.kotlin:kotlin-stdlib-jdk7", version.ref = "kotlin" }

# Testing
mockk = { module = "io.mockk:mockk", version.ref = "mockk" }
androidx-core-testing = { module = "androidx.arch.core:core-testing", version.ref = "androidx-core-testing" }

[plugins]

#compose
org-jetbrains-kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
compose-compiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }